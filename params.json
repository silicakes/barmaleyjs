{"name":"Barmaleyjs","tagline":"barmaleyjs (pronounced bɑr•mɑ•ləɪ / bar-muh-lay) is a small yet very flexible progressbar plugin written for and with jQuery. ","body":"barmaleyjs\r\n==========\r\n## Overview\r\nEver needed a progressbar and the one provided by jQuery-UI just didn't cut it?\r\nMeet Barmaley!\r\nBarmaley allows you to create a progressbar with several data progressions (referred as data-bars) and access/manage the data through a viewmodel attached to the parent containers $.data() object\r\n\r\n## Usage\r\n`$(\"#progressbar\").barmaley(options);`\r\n\r\n## Init options\r\nThe options parameter is a javascript object that contain one or more of the following:\r\n\r\n**dataSets** - an array of objects that contain the following properties:\r\n\r\n* **barLength** - [integer/float] The length of the current data-bar in %\r\n* **startFrom** - [integer/float] the position in % from which the data-bar will begin\r\n* **barColor** - [string] the color of the data-bar\r\n* **Css** - [object] an object containing additional CSS properties\r\n* **title** - [string] a text that will be placed within the elements title attribute\r\n\r\n**ticks** - [object] an object containing information about creating the ticks in the background (default: false)\r\n* **height** - [string] the height of the ticks in px or %\r\n* **amount** - [integer] the number of ticks to be displayed\r\n* **responsive** - [boolean] defines whther the ticks spacing will be in % or in px. if you want your progress bar to be fluid, set this property to 'true'\r\n\r\n## Methods\r\nBarmaleyJS has some methods that might help in managing the data.\r\nUnless otherwise specified, the syntax will be:\r\n\r\n`$(\"#progressbar\").barmaley(\"method\",[args | \"args\"]);`\r\n\r\n**update** _(id,{options})_ - Updates a specific bar using its ID. All the properties of dataBars[{}] are valid\r\n\r\n**remove** _(id)_ - removes the data-bar with the corresponding id\r\n\r\n**add** _({options})_ - adds a new bar with a specified set of properties\r\n\r\n_note that new item ids might vary according to the arrays situation_\r\n\r\n## Accessing data\r\n\r\nAccessing data has never been easier since the entire progress bar is represented as a view model stored within the jQuery data() object, under \"barData\":\r\n\r\n`$(\"#progressbar\").data(\"barData\")`\r\n\r\nThe above is represented with several helpful attributes:\r\n* **dataBars** - [object] an object containing the data regarding the data-bars in addition to an integer id\r\n\r\n* **element** - the element the method was initiated upon, it might sound redundant, but will be very beneficiary to those who choose to incorporate any kind of MVx framework which uses its own way of manipulating the DOM\r\n\r\n","google":"UA-40429320-1","note":"Don't delete this file! It's used internally to help with page regeneration."}